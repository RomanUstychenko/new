{"version":3,"file":"static/js/470.a0762772.chunk.js","mappings":"oKAEO,MAAMA,EAAmBC,GAAyCA,EAAMC,QAAQC,YAEvFC,QAAQC,IAAI,kBAAmBL,GAExB,MAAMM,EAAmBL,GAAyCA,EAAMC,QAAQK,Q,aCIvF,MAAMC,EAAoDC,EAAAA,GAkExD,EAjEyBC,KAErB,MAAMC,GAAWC,EAAAA,EAAAA,MAGTC,EAAWL,EAAiBR,GAC5BO,EAAUC,EAAiBF,IAC1BQ,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAEjCZ,QAAQC,IAAI,WAAYQ,GAuB5B,OACEI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAEJC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,QA1BLC,KACfX,GAASY,EAAAA,EAAAA,OACTC,aAAaC,OAAO,EAwBkBP,SAAC,YAC/CD,EAAAA,EAAAA,MAAA,QAAMS,SArBsBC,IACpBA,EAAEC,iBAGGd,GAMLH,GAASkB,EAAAA,EAAAA,GAAe,CAAEf,UAG1BC,EAAQ,KARNe,MAAM,4BAQG,EAQUZ,SAAA,EACrBD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOY,QAAQ,OAAMb,SAAC,mBACtBC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLY,GAAG,OACHC,MAAOnB,EACPoB,SAAWP,GAAMZ,EAAQY,EAAEQ,OAAOF,aAItCd,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASgB,SAAU7B,EAAQW,SACrCX,EAAU,YAAc,mBAK1BM,EAASwB,KAAInC,IACZe,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGhB,EAAQY,KAAK,MAAIZ,EAAQoC,MAAM,MAAIpC,EAAQ8B,KADrC9B,EAAQ8B,QAMf,C","sources":["redux/catalog/catalog-selector.ts","pages/main/main.tsx"],"sourcesContent":["import { MainCatalogState } from \"./catalog-slice\";\n\nexport const getMainCatalogs = (state: { catalog: MainCatalogState }) => state.catalog.mainCatalog;\n\nconsole.log(\"getMainCatalogs\", getMainCatalogs)\n// Селектор для отримання статусу завантаження\nexport const selectIsLoading = (state: { catalog: MainCatalogState }) => state.catalog.loading;\n\n// Селектор для отримання помилки\nexport const selectAuthError = (state: { catalog: MainCatalogState }) => state.catalog.error;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../redux/store';\nimport { logoutUser } from '../../redux/auth/auth-operation';\nimport { addMainCatalog } from '../../redux/catalog/catalog-operation';\nimport { getMainCatalogs, selectIsLoading } from '../../redux/catalog/catalog-selector';\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../../redux/store';\n\n// Типізований хук useSelector\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n    const Main: React.FC = () => {\n\n      const dispatch = useDispatch<AppDispatch>(); // правильно типізуємо dispatch\n\n      \n        const catalogs = useTypedSelector(getMainCatalogs);\n        const loading = useTypedSelector(selectIsLoading);\n        const [name, setName] = useState('');\n        \n        console.log(\"Catalogs\", catalogs)\n      const onLogout = () => {\n        dispatch(logoutUser());\n        localStorage.clear();\n      };\n\n      \n      const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n    \n        // Валідація\n        if (!name) {\n          alert('Please fill in all fields');\n          return;\n        }\n    \n        // Додаємо новий каталог через dispatch\n        dispatch(addMainCatalog({ name }));\n        \n        // Очищаємо форму\n        setName('');\n      };\n    \n    return (\n      <div>\n      <h1>main page</h1>\n\n      <button type=\"button\" onClick={onLogout}>Logout</button>\n<form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Catalog Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        \n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Adding...' : 'Add Catalog'}\n        </button>\n      </form>\n\n\n        {catalogs.map(catalog => (\n          <li key={catalog.id}>\n            {catalog.name} - {catalog.owner} - {catalog.id}\n          </li>\n        ))}\n      \n      \n      </div>\n    );\n  };\n\n  export default Main;"],"names":["getMainCatalogs","state","catalog","mainCatalog","console","log","selectIsLoading","loading","useTypedSelector","useSelector","Main","dispatch","useDispatch","catalogs","name","setName","useState","_jsxs","children","_jsx","type","onClick","onLogout","logoutUser","localStorage","clear","onSubmit","e","preventDefault","addMainCatalog","alert","htmlFor","id","value","onChange","target","disabled","map","owner"],"sourceRoot":""}