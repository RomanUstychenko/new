{"version":3,"file":"static/js/517.b158813e.chunk.js","mappings":"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","sources":["pages/main/main.styled.tsx","components/common/modal/modal.styled.tsx","components/common/modal/modal.tsx","redux/mainCatalog/mainCatalog-selector.ts","components/modals/mainAddCatalog/modalMainAddCatalog.styled.tsx","components/modals/mainAddCatalog/modalMainAddCatalog.tsx","redux/item/item-selector.ts","components/items/items.tsx","components/modals/secondaryAddCatalog/modalSecondaryAddCatalog.styled.tsx","components/modals/secondaryAddCatalog/modalSecondaryAddCatalog.tsx","components/modals/mainAddItem/modalMainAddItem.tsx","components/catalogs/secondaryCatalogs/secondaryCatalogs.tsx","pages/main/main.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { FaRegFolderClosed, FaRegFolderOpen } from \"react-icons/fa6\";\n\nexport const CatalogsWrap = styled.div`\n    \n    width: 400px;\n    border: 1px solid rgb(7, 94, 138);\n`\n\nexport const CloseFolder = styled(FaRegFolderClosed)`\n    \n`\nexport const OpenFolder = styled(FaRegFolderOpen)`\n    \n`","import styled from 'styled-components';\nimport { IoClose } from 'react-icons/io5';\n\nexport const Wrapp = styled.div`\n  position: relative;\n  margin-top: auto;\n  margin-bottom: auto;\n`;\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(17, 17, 17, 0.6);\n  backdrop-filter: blur(10px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  transition: 0.5s;\n  justify-content: center;\n  display: flex;\n  opacity: 0;\n  pointer-events: none;\n  transition: 1s;\n  &.active {\n    opacity: 1;\n    pointer-events: all;\n  }\n`;\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n`;\nexport const CloseIcon = styled(IoClose)`\n  color: #2e2828;\n  width: 30px;\n  height: 30px;\n  &:hover,\n  &:focus {\n    /* color: ${props => props.theme.colors.btnActive}; */\n    cursor: pointer;\n  }\n`;\n","import React, { ReactNode, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalBackdrop, CloseBtn, Wrapp, CloseIcon } from './modal.styled';\n\nexport const modalRoot = document.getElementById(\"modal-root\") as HTMLElement;\n\ninterface ModalProps {\n  active: boolean;\n  onClick: () => void;\n  setActive: (active: boolean) => void;\n  children: ReactNode;\n}\n\nexport const Modal: React.FC<ModalProps> = ({ active, onClick, setActive, children }) => {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.code === 'Escape') {\n        setActive(false);\n        document.body.style.overflow = '';\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.body.style.overflow = '';\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [setActive]);\n\n  return createPortal(\n    <ModalBackdrop\n    className={active ? 'modal active' : 'modal'}\n    onClick={onClick}\n  >\n    <Wrapp>\n      {children}\n      <CloseBtn onClick={onClick}>\n        <CloseIcon />\n      </CloseBtn>\n    </Wrapp>\n  </ModalBackdrop>,\n    modalRoot\n  );\n};","import { MainCatalogState } from \"./mainCatalog-slice\";\n\nexport const getMainCatalogs = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.mainCatalog;\nexport const getSecondaryCatalogs = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.secondaryCatalog;\n\n// Селектор для отримання статусу завантаження\nexport const selectIsLoading = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.loading;\n\n// Селектор для отримання помилки\nexport const selectAuthError = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.error;","import styled from \"styled-components\";\n\nexport const ModalForm = styled.form`\n    \n    width: 200px;\n    height: 200px;\n`","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../../redux/store';\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../../../redux/store';\nimport { selectIsLoading } from '../../../redux/mainCatalog/mainCatalog-selector';\nimport { addMainCatalog } from '../../../redux/mainCatalog/mainCatalog-operation';\n\nimport { ModalForm } from './modalMainAddCatalog.styled';\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n\ninterface ModalProps {\n    \n    closeModal: () => void;\n    \n  }\nconst  ModalMainAddCatalog: React.FC <ModalProps>= ({closeModal}) => {\n\n    const loading = useTypedSelector(selectIsLoading);\n    const [name, setName] = useState('');\n\n    const dispatch = useDispatch<AppDispatch>();\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!name) {\n          alert('Please fill in all fields');\n          return;\n        }\n        dispatch(addMainCatalog({ name }));\n        setName('');\n        closeModal()\n      };\n  return (\n\n\n    <ModalForm \n    onClick={e => e.stopPropagation()}\n    onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Catalog Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        \n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Adding...' : 'Add Catalog'}\n        </button>\n      </ModalForm>\n  )\n}\n\n\nexport default ModalMainAddCatalog;","\nimport { ItemState } from \"./item-slice\";\n\nexport const getMainItems = (state: { item: ItemState }) => state.item.mainItem;\n// export const getSecondaryCatalogs = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.secondaryCatalog;\n\n// // Селектор для отримання статусу завантаження\n// export const selectIsLoading = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.loading;\n\n// // Селектор для отримання помилки\n// export const selectAuthError = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.error;","import React from \"react\";\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from \"../../redux/store\";\nimport { getMainItems } from \"../../redux/item/item-selector\";\n\n\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const Items: React.FC = () => {\n\n    const mainItems = useTypedSelector(getMainItems);\n    return (\n\n        <div>\n\n<button>add item</button>\n<ul>\n             {mainItems.map(item => (\n          <li key={item.id}>{item.name} - {item.price}</li>\n             ))}\n\n          </ul>\n        </div>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const ModalForm = styled.form`\n    \n    width: 200px;\n    height: 200px;\n`","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../../redux/store';\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../../../redux/store';\nimport { selectIsLoading } from '../../../redux/mainCatalog/mainCatalog-selector';\n// import { addMainCatalog } from '../../../redux/mainCatalog/mainCatalog-operation';\nimport { addSecondaryCatalog } from '../../../redux/mainCatalog/mainCatalog-operation';\nimport { ModalForm } from './modalSecondaryAddCatalog.styled';\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n\ninterface ModalProps {\n    openFolderId: string | null;\n    closeModal: () => void;\n    \n  }\nconst  ModalSecondaryAddCatalog: React.FC <ModalProps>= ({closeModal, openFolderId}) => {\n\n    const dispatch = useDispatch<AppDispatch>();\n    const [name, setName] = useState('');\n\n    const loading = useTypedSelector(selectIsLoading);\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!name) {\n          alert('Please fill in all fields');\n          return;\n        }\n        dispatch(addSecondaryCatalog({ openFolderId, name }));\n        console.log(\"openFolderId\", openFolderId)\n        setName('');\n        closeModal()\n      };\n\n    return (\n<ModalForm \nonClick={e => e.stopPropagation()}\nonSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Catalog Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        \n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Adding...' : 'Add Catalog'}\n        </button>\n      </ModalForm>\n    )\n}\n\nexport default ModalSecondaryAddCatalog;","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../../redux/store';\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../../../redux/store';\nimport { selectIsLoading } from '../../../redux/mainCatalog/mainCatalog-selector';\nimport { addMainItem } from '../../../redux/item/item-operation';\n// import { addSecondaryCatalog } from '../../../redux/mainCatalog/mainCatalog-operation';\n// import { ModalForm } from './modalSecondaryAddCatalog.styled';\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n\ninterface ModalProps {\n    openFolderId: string | null;\n    closeModal: () => void;\n    \n  }\nconst  ModalMainAddItem: React.FC <ModalProps>= ({closeModal, openFolderId}) => {\n\n\n    const dispatch = useDispatch<AppDispatch>();\n    const [itemName, setItemName] = useState('');\n    const [itemDescription, setItemDescription] = useState('');\n    const [itemPrice, setItemPrice] = useState('');\n    const loading = useTypedSelector(selectIsLoading);\n\n\n    const handleSubmitItem = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!itemName) {\n          alert('Please fill in all fields');\n          return;\n        }\n        dispatch(addMainItem({ \n            catalog: openFolderId, \n            name: itemName, \n            description: itemDescription, \n            price: itemPrice}));\n        console.log(\"openFolderId\", openFolderId)\n        // dispatch(fetchMainItems(openFolderId))\n        // setName('');\n\n        closeModal()\n      };\n\n\n\n    return (\n        <form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmitItem}>\n        <div>\n          <label htmlFor=\"name\">Item Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={itemName}\n            onChange={(e) => setItemName(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"price\">Item Price:</label>\n          <input\n            type=\"text\"\n            id=\"price\"\n            value={itemPrice}\n            onChange={(e) => setItemPrice(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"name\">Item Description:</label>\n          <input\n            type=\"text\"\n            id=\"Description\"\n            value={itemDescription}\n            onChange={(e) => setItemDescription(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Adding...' : 'Add MainItem'}\n        </button>\n      </form>\n    )\n}\n\nexport default ModalMainAddItem;","import React, { useState } from \"react\";\n// import { useDispatch } from 'react-redux';\n// import { AppDispatch } from \"../../../redux/store\";\nimport { Items } from \"../../items/items\";\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from \"../../../redux/store\";\n// import { selectIsLoading } from \"../../../redux/mainCatalog/mainCatalog-selector\";\n// import { fetchSecondaryCatalog } from \"../../../redux/mainCatalog/mainCatalog-operation\";\nimport { getSecondaryCatalogs } from \"../../../redux/mainCatalog/mainCatalog-selector\";\n// import { addSecondaryCatalog } from \"../../../redux/mainCatalog/mainCatalog-operation\";\n// import { addMainItem } from \"../../../redux/item/item-operation\";\nimport { Modal } from \"../../common/modal/modal\";\nimport ModalSecondaryAddCatalog from \"../../modals/secondaryAddCatalog/modalSecondaryAddCatalog\";\nimport ModalMainAddItem from \"../../modals/mainAddItem/modalMainAddItem\";\n\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n\ninterface SecondaryCatalogsProps {\n    openFolderId: string | null;\n  }\n\nexport const SecondaryCatalogs: React.FC<SecondaryCatalogsProps> = ({openFolderId}) => {\n\n    const secondaryCatalogs = useTypedSelector(getSecondaryCatalogs);\n    \n\n    const [modalActive, setModalActive] = useState<boolean>(false);\n    const [modalActiveItem, setModalActiveItem] = useState<boolean>(false);\n\n    const closeModal = () => {\n        setModalActive(false)\n        setModalActiveItem(false)\n      }\n    \n\n    \n    return (\n\n        <div>\n             {modalActive && (\n            <Modal\n            active={modalActive}\n            setActive={setModalActive}\n            onClick={closeModal}\n              >\n<ModalSecondaryAddCatalog \nopenFolderId={openFolderId}\ncloseModal={closeModal}\n/>\n            </Modal>\n        )}\n     {modalActiveItem && (\n            <Modal\n            active={modalActiveItem}\n            setActive={setModalActiveItem}\n            onClick={closeModal}\n              >\n<ModalMainAddItem \nopenFolderId={openFolderId}\ncloseModal={closeModal}\n/>\n            </Modal>\n        )}\n<button onClick={() => setModalActive(true)}>Add Secondary Catalog</button>\n<button onClick={() => setModalActiveItem(true)}>Add Main Item</button>\n     \n<ul>\n             {secondaryCatalogs.map(catalog => (\n          <li key={catalog.id}>{catalog.name}</li>\n             ))}\n\n          </ul>\n<Items />\n        </div>\n       \n    )\n}\n\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../redux/store';\n// import { logoutUser } from '../../redux/auth/auth-operation';\n// import { addMainCatalog } from '../../redux/mainCatalog/mainCatalog-operation';\n// import { selectIsLoading } from '../../redux/mainCatalog/mainCatalog-selector';\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../../redux/store';\n// import { MainCatalogs } from '../../components/catalogs/mainCatalogs/mainCatalogs';\nimport { CatalogsWrap, OpenFolder, CloseFolder } from './main.styled';\nimport { Modal } from '../../components/common/modal/modal';\nimport ModalMainAddCatalog from '../../components/modals/mainAddCatalog/modalMainAddCatalog';\nimport { getMainCatalogs } from '../../redux/mainCatalog/mainCatalog-selector';\nimport { fetchSecondaryCatalog } from '../../redux/mainCatalog/mainCatalog-operation';\nimport { fetchMainItems } from '../../redux/item/item-operation';\nimport { SecondaryCatalogs } from '../../components/catalogs/secondaryCatalogs/secondaryCatalogs';\n// Типізований хук useSelector\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n    const Main: React.FC = () => {\n    \n\n      const [modalActive, setModalActive] = useState<boolean>(false); \n      const [openFolderId, setOpenFolderId] = useState<string | null>(null);\n\n      const mainCatalogs = useTypedSelector(getMainCatalogs);\n      // const secondaryCatalogs = useTypedSelector(getSecondaryCatalogs);\n  \n      const dispatch = useDispatch<AppDispatch>();\n  \n      const handleFolderClick = (id: string, e: React.FormEvent) => {\n          e.preventDefault();\n          \n  const newOpenFolder = openFolderId === id ? null : id;\n      setOpenFolderId(newOpenFolder);\n  \n          console.log(\"newOpenFolder\", newOpenFolder)\n          dispatch(fetchSecondaryCatalog(newOpenFolder));\n          dispatch(fetchMainItems(newOpenFolder))\n          \n      };\n      const closeModal = () => {\n        setModalActive(false)\n      }\n\n    return (\n      <main>\n      <h1>main page</h1>\n<CatalogsWrap>\n\n      <button onClick={() => setModalActive(true)}>add Main Catalog</button>\n\n            {modalActive && (\n              <Modal\n              active={modalActive}\n              setActive={setModalActive}\n              onClick={closeModal}\n\n              >\n                <ModalMainAddCatalog \n                closeModal={closeModal}/>\n              </Modal>\n            )}\n\n<ul>\n             {mainCatalogs.map(catalog => (\n          <li key={catalog.id}>\n            \n          <span onClick={(e) => handleFolderClick(catalog.id, e)}> \n          {openFolderId === catalog.id ? <OpenFolder /> : <CloseFolder />}\n             <p>{catalog.name}</p> </span>\n          {openFolderId === catalog.id && \n          <SecondaryCatalogs \n          openFolderId={openFolderId}/>\n          }\n          </li>\n        ))}\n        </ul>\n</CatalogsWrap>\n       \n      \n      \n      </main>\n    );\n  };\n\n  export default Main;"],"names":["CatalogsWrap","styled","div","CloseFolder","FaRegFolderClosed","OpenFolder","FaRegFolderOpen","Wrapp","ModalBackdrop","CloseBtn","button","CloseIcon","IoClose","props","theme","colors","btnActive","modalRoot","document","getElementById","Modal","_ref","active","onClick","setActive","children","useEffect","body","style","overflow","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","_jsx","className","_jsxs","getMainCatalogs","state","mainCatalog","getSecondaryCatalogs","secondaryCatalog","selectIsLoading","loading","ModalForm","form","useTypedSelector","useSelector","closeModal","name","setName","useState","dispatch","useDispatch","stopPropagation","onSubmit","preventDefault","addMainCatalog","alert","htmlFor","type","id","value","onChange","target","disabled","getMainItems","item","mainItem","Items","mainItems","map","price","openFolderId","addSecondaryCatalog","console","log","itemName","setItemName","itemDescription","setItemDescription","itemPrice","setItemPrice","addMainItem","catalog","description","SecondaryCatalogs","secondaryCatalogs","modalActive","setModalActive","modalActiveItem","setModalActiveItem","ModalSecondaryAddCatalog","ModalMainAddItem","Main","setOpenFolderId","mainCatalogs","ModalMainAddCatalog","handleFolderClick","newOpenFolder","fetchSecondaryCatalog","fetchMainItems"],"sourceRoot":""}