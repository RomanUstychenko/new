{"version":3,"file":"static/js/636.50e08f59.chunk.js","mappings":"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","sources":["pages/main/main.styled.tsx","components/common/modal/modal.styled.tsx","components/common/modal/modal.tsx","redux/mainCatalog/mainCatalog-selector.ts","redux/item/item-selector.ts","components/items/mainItems/mainItems.tsx","components/modals/addCatalog/modalAddCatalog.styled.tsx","components/modals/addCatalog/modalAddCatalog.tsx","components/modals/addItem/modalAddItem.tsx","components/catalogs/secondaryCatalogs/secondaryCatalogs.styled.tsx","components/items/secondaryItems/secondaryItems.tsx","components/catalogs/secondaryCatalogs/secondaryCatalogs.tsx","pages/main/main.tsx"],"sourcesContent":["import styled from \"styled-components\";\n// import { device } from 'Device';\n// import { device } from \"../../Device\";\nimport { FaRegFolderClosed, FaRegFolderOpen } from \"react-icons/fa6\";\nimport { IoIosArrowForward, IoIosArrowDown } from \"react-icons/io\";\nimport { FaFolderPlus } from \"react-icons/fa\";\n \nexport const CatalogsWrap = styled.main`\npadding: 15px 3px;\n    border: 1px solid rgb(7, 94, 138);\n`\nexport const ButtonWrap = styled.div`\ndisplay: block;\nwidth: 130px;\nheight: 70px;\nmargin-left: 50px;\n    border: 1px solid rgb(56, 61, 63);\n    border-radius: 5px;\n`\nexport const Button = styled.button`\nwidth: 100%;\nbackground-color: inherit;\nborder: none;\n`\nexport const ButtonIcon = styled(FaFolderPlus)`\n    width: 25px;\n    height: 25px;\n`\nexport const ButtonText = styled.p`\n    font-size: 18px;\n`\nexport const CloseArrow = styled(IoIosArrowDown)`\n    width: 20px;\n    height: 20px;\n`\nexport const CloseFolder = styled(FaRegFolderClosed)`\n    fill: #0e0e7e;\n    width: 20px;\n    height: 20px;\n`\nexport const OpenArrow = styled(IoIosArrowForward)`\n    width: 20px;\n    height: 20px;\n`\nexport const OpenFolder = styled(FaRegFolderOpen)`\n     fill: #0e0e7e;\n     width: 20px;\n    height: 20px;\n`\n\nexport const CatalogList = styled.span`\n    display: flex;\n`","import styled from 'styled-components';\nimport { IoClose } from 'react-icons/io5';\n\nexport const Wrapp = styled.div`\n  position: relative;\n  margin-top: auto;\n  margin-bottom: auto;\n`;\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(17, 17, 17, 0.6);\n  backdrop-filter: blur(10px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  transition: 0.5s;\n  justify-content: center;\n  display: flex;\n  opacity: 0;\n  pointer-events: none;\n  transition: 1s;\n  &.active {\n    opacity: 1;\n    pointer-events: all;\n  }\n`;\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n`;\nexport const CloseIcon = styled(IoClose)`\n  color: #2e2828;\n  width: 30px;\n  height: 30px;\n  &:hover,\n  &:focus {\n    /* color: ${props => props.theme.colors.btnActive}; */\n    cursor: pointer;\n  }\n`;\n","import React, { ReactNode, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalBackdrop, CloseBtn, Wrapp, CloseIcon } from './modal.styled';\n\nexport const modalRoot = document.getElementById(\"modal-root\") as HTMLElement;\n\ninterface ModalProps {\n  active: boolean;\n  onClick: () => void;\n  setActive: (active: boolean) => void;\n  children: ReactNode;\n}\n\nexport const Modal: React.FC<ModalProps> = ({ active, onClick, setActive, children }) => {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.code === 'Escape') {\n        setActive(false);\n        document.body.style.overflow = '';\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.body.style.overflow = '';\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [setActive]);\n\n  return createPortal(\n    <ModalBackdrop\n    className={active ? 'modal active' : 'modal'}\n    onClick={onClick}\n  >\n    <Wrapp>\n      {children}\n      <CloseBtn onClick={onClick}>\n        <CloseIcon />\n      </CloseBtn>\n    </Wrapp>\n  </ModalBackdrop>,\n    modalRoot\n  );\n};","import { MainCatalogState } from \"./mainCatalog-slice\";\n\nexport const getMainCatalogs = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.mainCatalog;\nexport const getSecondaryCatalogs = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.secondaryCatalog;\n\n// Селектор для отримання статусу завантаження\nexport const selectIsLoading = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.loading;\n\n// Селектор для отримання помилки\nexport const selectAuthError = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.error;","\nimport { ItemState } from \"./item-slice\";\n\nexport const getMainItems = (state: { item: ItemState }) => state.item.mainItem;\nexport const getSecondaryItems = (state: { item: ItemState }) => state.item.secondaryItem;\n\n// // Селектор для отримання статусу завантаження\n// export const selectIsLoading = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.loading;\n\n// // Селектор для отримання помилки\n// export const selectAuthError = (state: { mainCatalog: MainCatalogState }) => state.mainCatalog.error;","import React from \"react\";\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from \"../../../redux/store\";\nimport { getMainItems } from \"../../../redux/item/item-selector\";\n\n\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const MainItems: React.FC = () => {\n\n    const mainItems = useTypedSelector(getMainItems);\n    return (\n\n        <div>\n\n<ul>\n             {mainItems.map(item => (\n          <li key={item.id}>{item.name} - {item.price}</li>\n             ))}\n\n          </ul>\n        </div>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const ModalForm = styled.form`\n    \n    width: 200px;\n    height: 200px;\n`","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../../redux/store';\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../../../redux/store';\nimport { selectIsLoading } from '../../../redux/mainCatalog/mainCatalog-selector';\nimport { addMainCatalog } from '../../../redux/mainCatalog/mainCatalog-operation';\nimport { addSecondaryCatalog } from '../../../redux/mainCatalog/mainCatalog-operation';\nimport { ModalForm } from './modalAddCatalog.styled';\n\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n\ninterface ModalProps {\n    openFolderId: string | null;\n    closeModal: () => void;\n    isSecondary: boolean;\n  }\nconst  ModalAddCatalog: React.FC <ModalProps>= ({closeModal, openFolderId, isSecondary}) => {\n\n    const dispatch = useDispatch<AppDispatch>();\n    const [name, setName] = useState('');\n\n    const loading = useTypedSelector(selectIsLoading);\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!name) {\n          alert('Please fill in all fields');\n          return;\n        }\n        if (isSecondary) {\n        dispatch(addSecondaryCatalog({ openFolderId, name }));\n        console.log(\"openFolderId\", openFolderId)\n        \n      } else {\n        console.log(\"else\")\n        dispatch(addMainCatalog({ name }));\n      }\n      setName('');\n        closeModal()\n    } \n\n    return (\n<ModalForm \nonClick={e => e.stopPropagation()}\nonSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Catalog Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        \n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Adding...' : 'Add Catalog'}\n        </button>\n      </ModalForm>\n    )\n}\n\nexport default ModalAddCatalog;","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../../redux/store';\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../../../redux/store';\nimport { selectIsLoading } from '../../../redux/mainCatalog/mainCatalog-selector';\nimport { addSecondaryItem } from '../../../redux/item/item-operation';\nimport { addMainItem } from '../../../redux/item/item-operation';\n\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n\ninterface ModalProps {\n    openFolderId: string | null;\n    closeModal: () => void;\n    isSecondaryItem: boolean;\n  }\n\n  interface FormField {\n    key: string;\n    value: string;\n  }\n  \nconst  ModalAddItem: React.FC <ModalProps>= ({closeModal, openFolderId, isSecondaryItem}) => {\n\n\n    const dispatch = useDispatch<AppDispatch>();\n    const loading = useTypedSelector(selectIsLoading);\n    const [formFields, setFormFields] = useState<FormField[]>([\n      { key: 'name', value: '' },\n      { key: 'price', value: '' },\n      { key: 'description', value: '' },\n    ]);\n\n\n    const handleFieldChange = (e: React.ChangeEvent<HTMLInputElement> ) => {\n      const { name, value } = e.target;\n  setFormFields(prevFields =>\n        prevFields.map(field =>\n          field.key === name ? { ...field, value: value } : field\n        )\n      );\n    };\n\n    const result = formFields.reduce<Record<string, string>>((acc, item) => {\n      if (item.value !== '' || item.key === 'name' || item.key === 'price') {\n        acc[item.key] = item.value;\n      }\n      return acc;\n    }, {});\n\n    console.log(\"result\", result)\n    const getFieldValue = (key: string) => {\n      return formFields.find(field => field.key === key)?.value || '';\n    };\n    const handleSubmitItem = async (e: React.FormEvent) => {\n        e.preventDefault();\n      \n        if (!openFolderId) {\n          alert('Catalog ID is missing');\n          return;\n      }\n\n  try {\n    if (isSecondaryItem) {\n      await dispatch(addSecondaryItem({\n          catalog: openFolderId,\n          fields: result,\n      }));\n  } else {\n      await dispatch(addMainItem({\n          catalog: openFolderId,\n          fields: result,\n      }));\n  }\n        setFormFields(prevFields => \n          prevFields.map(field => ({ ...field, value: '' }))\n        );\n        closeModal();\n    \n  } catch (error) {\n    console.error(\"Помилка при додаванні елемента:\", error);\n  }\n      };\n\n\n    return (\n        <form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmitItem}>\n\n{formFields.map((field) => (\n        <div key={field.key}>\n          <label htmlFor={field.key}>{field.key.charAt(0).toUpperCase() + field.key.slice(1)}:</label>\n          <input\n            type=\"text\"\n            id={field.key}\n            name={field.key}\n            required={field.key === \"name\" || field.key === \"price\"}\n            value={getFieldValue(field.key)}\n            onChange={handleFieldChange}\n          />\n        </div>\n      ))}\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Adding...' : 'Add SecondaryItem'}\n        </button>\n      </form>\n    )\n}\n\nexport default ModalAddItem;","import styled from \"styled-components\";\nimport { FaRegFolderClosed, FaRegFolderOpen } from \"react-icons/fa6\";\n\nexport const CatalogsWrap = styled.div`\n    \n    width: 400px;\n    border: 1px solid rgb(7, 94, 138);\n`\n\nexport const CloseFolder = styled(FaRegFolderClosed)`\n    \n`\nexport const OpenFolder = styled(FaRegFolderOpen)`\n    \n`","import React, { useState } from \"react\";\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from \"../../../redux/store\";\nimport { getSecondaryItems } from \"../../../redux/item/item-selector\";\nimport { Modal } from \"../../common/modal/modal\";\nimport ModalAddItem from \"../../modals/addItem/modalAddItem\";\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n\ninterface SecondaryItemsProps {\n    openSecondaryFolderId: string | null;\n  }\n\n  \nexport const SecondaryItems: React.FC<SecondaryItemsProps> = ({openSecondaryFolderId}) => {\n\n    const secondaryItems = useTypedSelector(getSecondaryItems);\n    const [modalActive, setModalActive] = useState<boolean>(false);\n\n    const closeModal = () => {\n      setModalActive(false)\n      \n    }\n\n    return (\n\n        <div>\n  {modalActive && (\n            <Modal\n            active={modalActive}\n            setActive={setModalActive}\n            onClick={closeModal}\n              >\n<ModalAddItem \nopenFolderId={openSecondaryFolderId}\ncloseModal={closeModal}\nisSecondaryItem={true}\n/>\n            </Modal>\n        )}\n<button onClick={() => setModalActive(true)}>add secondary items</button>\n<ul>\n             {secondaryItems.map(item => (\n          <li key={item.id}>{item.name} - {item.price}</li>\n             ))}\n\n          </ul>\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from \"../../../redux/store\";\nimport { MainItems } from \"../../items/mainItems/mainItems\";\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from \"../../../redux/store\";\n// import { selectIsLoading } from \"../../../redux/mainCatalog/mainCatalog-selector\";\n// import { fetchSecondaryCatalog } from \"../../../redux/mainCatalog/mainCatalog-operation\";\nimport { getSecondaryCatalogs } from \"../../../redux/mainCatalog/mainCatalog-selector\";\nimport { Modal } from \"../../common/modal/modal\";\nimport ModalAddCatalog from \"../../modals/addCatalog/modalAddCatalog\";\n// import ModalMainAddItem from \"../../modals/mainAddItem/modalMainAddItem\";\nimport ModalAddItem from \"../../modals/addItem/modalAddItem\";\nimport { OpenFolder, CloseFolder } from \"./secondaryCatalogs.styled\";\nimport { SecondaryItems } from \"../../items/secondaryItems/secondaryItems\";\nimport { fetchSecondaryItems } from \"../../../redux/item/item-operation\";\n\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n\ninterface SecondaryCatalogsProps {\n    openFolderId: string | null;\n  }\n\nexport const SecondaryCatalogs: React.FC<SecondaryCatalogsProps> = ({openFolderId}) => {\n\n  const dispatch = useDispatch<AppDispatch>();\n  \n    const secondaryCatalogs = useTypedSelector(getSecondaryCatalogs);\n    \n\n    const [modalActive, setModalActive] = useState<boolean>(false);\n    const [modalActiveItem, setModalActiveItem] = useState<boolean>(false);\n\n    const [openSecondaryFolderId, setOpenSecondaryFolderId] = useState<string | null>(null);\n\n    const closeModal = () => {\n        setModalActive(false)\n        setModalActiveItem(false)\n      }\n    \n      const handleFolderClick = (id: string, e: React.FormEvent) => {\n        e.preventDefault();\n        \nconst newOpenFolder = openSecondaryFolderId === id ? null : id;\nsetOpenSecondaryFolderId(newOpenFolder);\n\n        console.log(\"newOpenFolder\", newOpenFolder)\n        // dispatch(fetchSecondaryCatalog(newOpenFolder));\n        dispatch(fetchSecondaryItems(newOpenFolder))\n        \n    };\n    \n    return (\n\n        <div>\n             {modalActive && (\n            <Modal\n            active={modalActive}\n            setActive={setModalActive}\n            onClick={closeModal}\n              >\n<ModalAddCatalog \nopenFolderId={openFolderId}\ncloseModal={closeModal}\nisSecondary={true}\n/>\n            </Modal>\n        )}\n     {modalActiveItem && (\n            <Modal\n            active={modalActiveItem}\n            setActive={setModalActiveItem}\n            onClick={closeModal}\n              >\n<ModalAddItem \nopenFolderId={openFolderId}\ncloseModal={closeModal}\nisSecondaryItem={false}\n/>\n            </Modal>\n        )}\n<button onClick={() => setModalActive(true)}>Add Secondary Catalog</button>\n<button onClick={() => setModalActiveItem(true)}>Add Main Item</button>\n     \n<ul>\n             {secondaryCatalogs.map(catalog => (\n          <li key={catalog.id}>\n            \n            <span onClick={(e) => handleFolderClick(catalog.id, e)}> \n          {openSecondaryFolderId === catalog.id ? <OpenFolder /> : <CloseFolder />}\n             <p>{catalog.name}</p> </span>\n             {openSecondaryFolderId === catalog.id && \n          <SecondaryItems \n          openSecondaryFolderId={openSecondaryFolderId}/>\n          }\n            </li>\n             ))}\n\n          </ul>\n<MainItems />\n        </div>\n       \n    )\n}\n\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../redux/store';\n// import { logoutUser } from '../../redux/auth/auth-operation';\n// import { addMainCatalog } from '../../redux/mainCatalog/mainCatalog-operation';\n// import { selectIsLoading } from '../../redux/mainCatalog/mainCatalog-selector';\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../../redux/store';\n// import { MainCatalogs } from '../../components/catalogs/mainCatalogs/mainCatalogs';\nimport { CatalogsWrap, \n  OpenFolder, \n  CloseArrow, \n  CloseFolder, \n  OpenArrow, \n  CatalogList,\n  ButtonWrap,\n  Button,\n  ButtonIcon,\n  ButtonText,\n} from './main.styled';\nimport { Modal } from '../../components/common/modal/modal';\nimport { getMainCatalogs } from '../../redux/mainCatalog/mainCatalog-selector';\nimport { fetchSecondaryCatalog } from '../../redux/mainCatalog/mainCatalog-operation';\nimport { fetchMainItems } from '../../redux/item/item-operation';\nimport { SecondaryCatalogs } from '../../components/catalogs/secondaryCatalogs/secondaryCatalogs';\nimport ModalAddCatalog from '../../components/modals/addCatalog/modalAddCatalog';\n\n// Типізований хук useSelector\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n    const Main: React.FC = () => {\n    \n\n      const [modalActive, setModalActive] = useState<boolean>(false); \n      const [openFolderId, setOpenFolderId] = useState<string | null>(null);\n\n      const mainCatalogs = useTypedSelector(getMainCatalogs);\n      // const secondaryCatalogs = useTypedSelector(getSecondaryCatalogs);\n  \n      const dispatch = useDispatch<AppDispatch>();\n  \n      const handleFolderClick = (id: string, e: React.FormEvent) => {\n          e.preventDefault();\n          \n  const newOpenFolder = openFolderId === id ? null : id;\n      setOpenFolderId(newOpenFolder);\n  \n          console.log(\"newOpenFolder\", newOpenFolder)\n          dispatch(fetchSecondaryCatalog(newOpenFolder));\n          dispatch(fetchMainItems(newOpenFolder))\n          \n      };\n      const closeModal = () => {\n        setModalActive(false)\n      }\n\n    return (\n      \n      \n<CatalogsWrap>\n<ButtonWrap>\n  <ButtonIcon />\n      <Button onClick={() => setModalActive(true)}>\n        <ButtonText>Add Catalog</ButtonText>\n        </Button>\n      </ButtonWrap>\n\n            {modalActive && (\n              <Modal\n              active={modalActive}\n              setActive={setModalActive}\n              onClick={closeModal}\n\n              >\n                <ModalAddCatalog \n                closeModal={closeModal}\n                isSecondary={false}\n                openFolderId={null}\n                />\n              </Modal>\n            )}\n\n<ul>\n             {mainCatalogs.map(catalog => (\n          <li key={catalog.id}>\n            \n          <CatalogList onClick={(e) => handleFolderClick(catalog.id, e)}> \n          {openFolderId === catalog.id ? <><CloseArrow /><OpenFolder /></> : <><OpenArrow /><CloseFolder /></>}\n             <p>{catalog.name}</p> </CatalogList>\n          {openFolderId === catalog.id && \n          <SecondaryCatalogs \n          openFolderId={openFolderId}/>\n          }\n          </li>\n        ))}\n        </ul>\n</CatalogsWrap>\n       \n      \n      \n     \n    );\n  };\n\n  export default Main;"],"names":["CatalogsWrap","styled","main","ButtonWrap","div","Button","button","ButtonIcon","FaFolderPlus","ButtonText","p","CloseArrow","IoIosArrowDown","CloseFolder","FaRegFolderClosed","OpenArrow","IoIosArrowForward","OpenFolder","FaRegFolderOpen","CatalogList","span","Wrapp","ModalBackdrop","CloseBtn","CloseIcon","IoClose","props","theme","colors","btnActive","modalRoot","document","getElementById","Modal","_ref","active","onClick","setActive","children","useEffect","body","style","overflow","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","_jsx","className","_jsxs","getMainCatalogs","state","mainCatalog","getSecondaryCatalogs","secondaryCatalog","selectIsLoading","loading","getMainItems","item","mainItem","getSecondaryItems","secondaryItem","useTypedSelector","useSelector","MainItems","mainItems","map","name","price","id","ModalForm","form","closeModal","openFolderId","isSecondary","dispatch","useDispatch","setName","useState","stopPropagation","onSubmit","preventDefault","addSecondaryCatalog","console","log","addMainCatalog","alert","htmlFor","type","value","onChange","target","disabled","isSecondaryItem","formFields","setFormFields","key","handleFieldChange","prevFields","field","result","reduce","acc","getFieldValue","_formFields$find","find","async","addSecondaryItem","catalog","fields","addMainItem","error","charAt","toUpperCase","slice","required","SecondaryItems","openSecondaryFolderId","secondaryItems","modalActive","setModalActive","ModalAddItem","SecondaryCatalogs","secondaryCatalogs","modalActiveItem","setModalActiveItem","setOpenSecondaryFolderId","ModalAddCatalog","handleFolderClick","newOpenFolder","fetchSecondaryItems","Main","setOpenFolderId","mainCatalogs","fetchSecondaryCatalog","fetchMainItems","_Fragment"],"sourceRoot":""}