{"version":3,"file":"static/js/72.e3412cb6.chunk.js","mappings":"gKAYI,MAoCF,EApC0BA,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,QAAEC,EAAO,MAAEC,IAAUC,EAAAA,EAAAA,KACxBC,GAAqBA,EAAMC,OAehC,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAZcC,IACpBA,EAAMC,iBACN,MAAMC,EAAOF,EAAMG,OACbC,EAAW,IAAIC,SAASH,GACxBI,EAA2B,CAC/BC,MAAOH,EAASI,IAAI,SACpBC,SAAUL,EAASI,IAAI,aAEzBjB,GAASmB,EAAAA,EAAAA,IAAUJ,GAAW,EAIDK,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,QAAQC,KAAK,QAAQC,YAAY,QAAQC,UAAQ,KAC7DJ,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAWC,KAAK,WAAWC,YAAY,WAAWC,UAAQ,KACtEJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASI,SAAUxB,EAAQkB,SACrClB,EAAU,iBAAmB,UAE/BC,IACLkB,EAAAA,EAAAA,KAAA,KAAAD,SACoB,kBAAVjB,EACJA,EACA,GAAQ,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOwB,YAAgB,OAALxB,QAAK,IAALA,OAAK,EAALA,EAAOyB,UAAW,sBAGpC,C","sources":["pages/login/loginForm.tsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from \"../../redux/store\";\nimport { loginUser } from '../../redux/auth/auth-operation';\n\n\n// Типізація для даних форми входу\ninterface LoginFormData {\n    email: string;\n    password: string;\n  }\n  \n    const Login: React.FC = () => {\n      const dispatch = useDispatch<AppDispatch>();\n      const { loading, error } = useSelector(\n        (state: RootState) => state.auth\n      );\n  \n    // Типізуємо функцію onLogin\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const form = event.target as HTMLFormElement;\n      const formData = new FormData(form);\n      const loginData: LoginFormData = {\n        email: formData.get(\"email\") as string,\n        password: formData.get(\"password\") as string,\n      };\n      dispatch(loginUser(loginData));\n    };\n  \n    return (\n      <form onSubmit={handleSubmit}>\n      <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n      <button type=\"submit\" disabled={loading}>\n        {loading ? \"Registering...\" : \"Login\"}\n      </button>\n      {error && (\n  <p>\n    {typeof error === 'string'\n      ? error\n      : `${error?.status}: ${error?.message || 'Unknown error'}`}\n  </p>\n)}\n    </form>\n    );\n  };\n\n  export default Login;"],"names":["Login","dispatch","useDispatch","loading","error","useSelector","state","auth","_jsxs","onSubmit","event","preventDefault","form","target","formData","FormData","loginData","email","get","password","loginUser","children","_jsx","type","name","placeholder","required","disabled","status","message"],"sourceRoot":""}