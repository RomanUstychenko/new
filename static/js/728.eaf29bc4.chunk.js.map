{"version":3,"file":"static/js/728.eaf29bc4.chunk.js","mappings":"kKAWA,MAyCA,EAzC+BA,KAC7B,MAAMC,GAAWC,EAAAA,EAAAA,OACX,QAAEC,EAAO,MAAEC,EAAK,WAAEC,IAAeC,EAAAA,EAAAA,KACpCC,GAAqBA,EAAMC,OAkB9B,OAFFC,QAAQC,IAAI,aAAcL,GAC1BI,QAAQC,IAAI,QAASN,IAEjBO,EAAAA,EAAAA,MAAA,QAAMC,SAhBcC,IACpBA,EAAMC,iBACN,MAAMC,EAAOF,EAAMG,OACbC,EAAW,IAAIC,SAASH,GAExBI,EAAiC,CACrCC,KAAMH,EAASI,IAAI,QACnBC,MAAOL,EAASI,IAAI,SACpBE,SAAUN,EAASI,IAAI,aAGzBpB,GAASuB,EAAAA,EAAAA,IAAaL,GAAc,EAKPM,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOP,KAAK,OAAOQ,YAAY,OAAOC,UAAQ,KAC1DH,EAAAA,EAAAA,KAAA,SAAOC,KAAK,QAAQP,KAAK,QAAQQ,YAAY,QAAQC,UAAQ,KAC7DH,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAWP,KAAK,WAAWQ,YAAY,WAAWC,UAAQ,KACtEH,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASG,SAAU3B,EAAQsB,SACrCtB,EAAU,iBAAmB,aAE/BC,GAA0B,kBAAVA,IACrBO,EAAAA,EAAAA,MAAA,KAAAc,SAAA,CAAIrB,EAAM2B,OAAO,IAAE3B,EAAM4B,WAE1B5B,GAA0B,kBAAVA,IACfsB,EAAAA,EAAAA,KAAA,KAAAD,SAAIrB,IAGCC,IAAcqB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BACb,C","sources":["pages/registration/registerForm.tsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"../../redux/store\";\nimport { registerUser } from \"../../redux/auth/auth-operation\";\n\ninterface RegisterFormData {\n  email: string;\n  password: string;\n  name?: string;\n}\n\nconst RegisterForm: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { loading, error, isRegister } = useSelector(\n    (state: RootState) => state.auth\n  );\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const form = event.target as HTMLFormElement;\n    const formData = new FormData(form);\n\n    const registerData: RegisterFormData = {\n      name: formData.get(\"name\") as string,\n      email: formData.get(\"email\") as string,\n      password: formData.get(\"password\") as string,\n    };\n\n    dispatch(registerUser(registerData));\n  };\nconsole.log(\"isRegister\", isRegister)\nconsole.log(\"error\", error)\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"name\" placeholder=\"Name\" required />\n      <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n      <button type=\"submit\" disabled={loading}>\n        {loading ? \"Registering...\" : \"Register\"}\n      </button>\n      {error && typeof error !== \"string\" && (\n  <p>{error.status} {error.message}</p>\n)}\n{error && typeof error === \"string\" && (\n  <p>{error}</p>\n)}\n      \n      {isRegister && <p>Registration successful!</p>}\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"],"names":["RegisterForm","dispatch","useDispatch","loading","error","isRegister","useSelector","state","auth","console","log","_jsxs","onSubmit","event","preventDefault","form","target","formData","FormData","registerData","name","get","email","password","registerUser","children","_jsx","type","placeholder","required","disabled","status","message"],"sourceRoot":""}